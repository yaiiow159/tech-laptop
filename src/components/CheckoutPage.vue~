<script setup>
import { ref, computed, onMounted } from 'vue';
import { useCart } from '../store/cart';

const cart = useCart();
const currentStep = ref(1);
const totalSteps = 3;

// Computed property to ensure items are valid
const validCartItems = computed(() => {
  return cart.items.value.filter(item => item && item.id);
});

onMounted(() => {
  cart.loadCart();
});

// Form data
const shippingInfo = ref({
  firstName: '',
  lastName: '',
  email: '',
  phone: '',
  address: '',
  city: '',
  state: '',
  zipCode: '',
  country: 'United States'
});

const billingInfo = ref({
  sameAsShipping: true,
  firstName: '',
  lastName: '',
  address: '',
  city: '',
  state: '',
  zipCode: '',
  country: 'United States'
});

const paymentInfo = ref({
  method: 'credit_card',
  cardNumber: '',
  cardName: '',
  expiryDate: '',
  cvv: '',
  saveCard: false
});

const termsAccepted = ref(false);

// Computed properties
const effectiveBillingInfo = computed(() => {
  if (billingInfo.value.sameAsShipping) {
    return {
      firstName: shippingInfo.value.firstName,
      lastName: shippingInfo.value.lastName,
      address: shippingInfo.value.address,
      city: shippingInfo.value.city,
      state: shippingInfo.value.state,
      zipCode: shippingInfo.value.zipCode,
      country: shippingInfo.value.country
    };
  }
  return billingInfo.value;
});

const isShippingFormValid = computed(() => {
  const s = shippingInfo.value;
  return s.firstName && s.lastName && s.email && s.phone && s.address && s.city && s.state && s.zipCode;
});

const isBillingFormValid = computed(() => {
  if (billingInfo.value.sameAsShipping) return true;
  
  const b = billingInfo.value;
  return b.firstName && b.lastName && b.address && b.city && b.state && b.zipCode;
});

const isPaymentFormValid = computed(() => {
  const p = paymentInfo.value;
  if (p.method === 'credit_card') {
    return p.cardNumber && p.cardName && p.expiryDate && p.cvv;
  }
  return true;
});

const canProceed = computed(() => {
  if (currentStep.value === 1) return isShippingFormValid.value;
  if (currentStep.value === 2) return isBillingFormValid.value;
  if (currentStep.value === 3) return isPaymentFormValid.value && termsAccepted.value;
  return false;
});

// Methods
const nextStep = () => {
  if (currentStep.value < totalSteps) {
    currentStep.value++;
    window.scrollTo(0, 0);
  }
};

const prevStep = () => {
  if (currentStep.value > 1) {
    currentStep.value--;
    window.scrollTo(0, 0);
  }
};

const placeOrder = () => {
  // In a real application, this would send the order to a backend
  alert('Thank you for your order! Order #' + Math.floor(Math.random() * 10000));
  cart.clearCart();
  window.location.href = '/';
};

const formatPrice = (price) => {
  // Handle undefined, null or NaN values
  if (price === undefined || price === null || isNaN(price)) {
    return '$0.00';
  }
  return `$${Number(price).toFixed(2)}`;
};
</script>

<template>
  <div class="checkout-page">
    <div class="container">
      <h1 class="checkout-title">Checkout</h1>
      
      <div class="checkout-progress">
        <div 
          v-for="step in totalSteps" 
          :key="step"
          class="progress-step"
          :class="{ 
            'active': step === currentStep,
            'completed': step < currentStep
          }"
        >
          <div class="step-number">{{ step }}</div>
          <div class="step-label">
            {{ step === 1 ? 'Shipping' : step === 2 ? 'Billing' : 'Payment' }}
          </div>
        </div>
      </div>
      
      <div class="checkout-content">
        <div class="checkout-form">
          <!-- Step 1: Shipping Information -->
          <div v-if="currentStep === 1" class="checkout-step">
            <h2 class="step-title">Shipping Information</h2>
            
            <div class="form-row">
              <div class="form-group">
                <label for="firstName">First Name*</label>
                <input 
                  type="text" 
                  id="firstName" 
                  v-model="shippingInfo.firstName" 
                  required
                >
              </div>
              <div class="form-group">
                <label for="lastName">Last Name*</label>
                <input 
                  type="text" 
                  id="lastName" 
                  v-model="shippingInfo.lastName" 
                  required
                >
              </div>
            </div>
            
            <div class="form-row">
              <div class="form-group">
                <label for="email">Email Address*</label>
                <input 
                  type="email" 
                  id="email" 
                  v-model="shippingInfo.email" 
                  required
                >
              </div>
              <div class="form-group">
                <label for="phone">Phone Number*</label>
                <input 
                  type="tel" 
                  id="phone" 
                  v-model="shippingInfo.phone" 
                  required
                >
              </div>
            </div>
            
            <div class="form-group">
              <label for="address">Address*</label>
              <input 
                type="text" 
                id="address" 
                v-model="shippingInfo.address" 
                required
              >
            </div>
            
            <div class="form-row">
              <div class="form-group">
                <label for="city">City*</label>
                <input 
                  type="text" 
                  id="city" 
                  v-model="shippingInfo.city" 
                  required
                >
              </div>
              <div class="form-group">
                <label for="state">State/Province*</label>
                <input 
                  type="text" 
                  id="state" 
                  v-model="shippingInfo.state" 
                  required
                >
              </div>
            </div>
            
            <div class="form-row">
              <div class="form-group">
                <label for="zipCode">ZIP/Postal Code*</label>
                <input 
                  type="text" 
                  id="zipCode" 
                  v-model="shippingInfo.zipCode" 
                  required
                >
              </div>
              <div class="form-group">
                <label for="country">Country*</label>
                <select id="country" v-model="shippingInfo.country">
                  <option value="United States">United States</option>
                  <option value="Canada">Canada</option>
                  <option value="United Kingdom">United Kingdom</option>
                  <option value="Australia">Australia</option>
                  <option value="Germany">Germany</option>
                  <option value="France">France</option>
                  <option value="Japan">Japan</option>
                </select>
              </div>
            </div>
          </div>
          
          <!-- Step 2: Billing Information -->
          <div v-if="currentStep === 2" class="checkout-step">
            <h2 class="step-title">Billing Information</h2>
            
            <div class="form-group checkbox-group">
              <input 
                type="checkbox" 
                id="sameAsShipping" 
                v-model="billingInfo.sameAsShipping"
              >
              <label for="sameAsShipping">Same as shipping address</label>
            </div>
            
            <template v-if="!billingInfo.sameAsShipping">
              <div class="form-row">
                <div class="form-group">
                  <label for="billingFirstName">First Name*</label>
                  <input 
                    type="text" 
                    id="billingFirstName" 
                    v-model="billingInfo.firstName" 
                    required
                  >
                </div>
                <div class="form-group">
                  <label for="billingLastName">Last Name*</label>
                  <input 
                    type="text" 
                    id="billingLastName" 
                    v-model="billingInfo.lastName" 
                    required
                  >
                </div>
              </div>
              
              <div class="form-group">
                <label for="billingAddress">Address*</label>
                <input 
                  type="text" 
                  id="billingAddress" 
                  v-model="billingInfo.address" 
                  required
                >
              </div>
              
              <div class="form-row">
                <div class="form-group">
                  <label for="billingCity">City*</label>
                  <input 
                    type="text" 
                    id="billingCity" 
                    v-model="billingInfo.city" 
                    required
                  >
                </div>
                <div class="form-group">
                  <label for="billingState">State/Province*</label>
                  <input 
                    type="text" 
                    id="billingState" 
                    v-model="billingInfo.state" 
                    required
                  >
                </div>
              </div>
              
              <div class="form-row">
                <div class="form-group">
                  <label for="billingZipCode">ZIP/Postal Code*</label>
                  <input 
                    type="text" 
                    id="billingZipCode" 
                    v-model="billingInfo.zipCode" 
                    required
                  >
                </div>
                <div class="form-group">
                  <label for="billingCountry">Country*</label>
                  <select id="billingCountry" v-model="billingInfo.country">
                    <option value="United States">United States</option>
                    <option value="Canada">Canada</option>
                    <option value="United Kingdom">United Kingdom</option>
                    <option value="Australia">Australia</option>
                    <option value="Germany">Germany</option>
                    <option value="France">France</option>
                    <option value="Japan">Japan</option>
                  </select>
                </div>
              </div>
            </template>
          </div>
          
          <!-- Step 3: Payment Information -->
          <div v-if="currentStep === 3" class="checkout-step">
            <h2 class="step-title">Payment Information</h2>
            
            <div class="payment-methods">
              <div class="payment-method">
                <input 
                  type="radio" 
                  id="credit_card" 
                  value="credit_card" 
                  v-model="paymentInfo.method"
                >
                <label for="credit_card">Credit Card</label>
              </div>
              <div class="payment-method">
                <input 
                  type="radio" 
                  id="paypal" 
                  value="paypal" 
                  v-model="paymentInfo.method"
                >
                <label for="paypal">PayPal</label>
              </div>
            </div>
            
            <div v-if="paymentInfo.method === 'credit_card'" class="credit-card-form">
              <div class="form-group">
                <label for="cardNumber">Card Number*</label>
                <input 
                  type="text" 
                  id="cardNumber" 
                  v-model="paymentInfo.cardNumber" 
                  placeholder="XXXX XXXX XXXX XXXX"
                  required
                >
              </div>
              
              <div class="form-group">
                <label for="cardName">Name on Card*</label>
                <input 
                  type="text" 
                  id="cardName" 
                  v-model="paymentInfo.cardName" 
                  required
                >
              </div>
              
              <div class="form-row">
                <div class="form-group">
                  <label for="expiryDate">Expiry Date*</label>
                  <input 
                    type="text" 
                    id="expiryDate" 
                    v-model="paymentInfo.expiryDate" 
                    placeholder="MM/YY"
                    required
                  >
                </div>
                <div class="form-group">
                  <label for="cvv">CVV*</label>
                  <input 
                    type="text" 
                    id="cvv" 
                    v-model="paymentInfo.cvv" 
                    placeholder="XXX"
                    required
                  >
                </div>
              </div>
              
              <div class="form-group checkbox-group">
                <input 
                  type="checkbox" 
                  id="saveCard" 
                  v-model="paymentInfo.saveCard"
                >
                <label for="saveCard">Save card for future purchases</label>
              </div>
            </div>
            
            <div v-else-if="paymentInfo.method === 'paypal'" class="paypal-info">
              <p>You will be redirected to PayPal to complete your payment.</p>
            </div>
            
            <div class="form-group checkbox-group terms-group">
              <input 
                type="checkbox" 
                id="termsAccepted" 
                v-model="termsAccepted"
                required
              >
              <label for="termsAccepted">
                I agree to the <a href="#terms">Terms and Conditions</a> and <a href="#privacy">Privacy Policy</a>
              </label>
            </div>
          </div>
          
          <div class="checkout-actions">
            <button 
              v-if="currentStep > 1" 
              class="btn btn-outline" 
              @click="prevStep"
            >
              Back
            </button>
            
            <button 
              v-if="currentStep < totalSteps" 
              class="btn btn-primary" 
              @click="nextStep"
              :disabled="!canProceed"
            >
              Continue
            </button>
            
            <button 
              v-else 
              class="btn btn-primary" 
              @click="placeOrder"
              :disabled="!canProceed"
            >
              Place Order
            </button>
          </div>
        </div>
        
        <div class="order-summary">
          <h3 class="summary-title">Order Summary</h3>
          
          <div class="summary-items">
            <div v-for="item in validCartItems" :key="item.id" class="summary-item">
              <div class="item-image">
                <img :src="item.image || ''" :alt="item.name || 'Product'">
                <span class="item-quantity">{{ item.quantity }}</span>
              </div>
              <div class="item-details">
                <h4 class="item-name">{{ item.name || 'Product' }}</h4>
                <p class="item-price">{{ formatPrice(((item.discountPrice || item.price) || 0) * (item.quantity || 1)) }}</p>
              </div>
            </div>
          </div>
          
          <div class="summary-totals">
            <div class="summary-row">
              <span>Subtotal:</span>
              <span>{{ formatPrice(cart.cartSubtotal) }}</span>
            </div>
            <div class="summary-row">
              <span>Tax (10%):</span>
              <span>{{ formatPrice(cart.cartTax) }}</span>
            </div>
            <div class="summary-row">
              <span>Shipping:</span>
              <span>{{ cart.cartShipping === 0 ? 'Free' : formatPrice(cart.cartShipping) }}</span>
            </div>
            <div class="summary-row total">
              <span>Total:</span>
              <span>{{ formatPrice(cart.cartGrandTotal) }}</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<style scoped>
.checkout-page {
  padding: 4rem 0;
  background-color: #f9f9f9;
}

.checkout-title {
  text-align: center;
  margin-bottom: 2rem;
  font-size: 2rem;
  font-weight: 700;
}

.checkout-progress {
  display: flex;
  justify-content: space-between;
  margin-bottom: 3rem;
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
  position: relative;
}

.checkout-progress::before {
  content: '';
  position: absolute;
  top: 25px;
  left: 10%;
  right: 10%;
  height: 2px;
  background-color: rgba(0, 0, 0, 0.1);
  z-index: 1;
}

.progress-step {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
  z-index: 2;
}

.step-number {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: white;
  border: 2px solid rgba(0, 0, 0, 0.1);
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 600;
  margin-bottom: 0.5rem;
  transition: all var(--transition-speed);
}

.step-label {
  font-size: 0.9rem;
  color: var(--gray-color);
  transition: color var(--transition-speed);
}

.progress-step.active .step-number {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
  color: white;
}

.progress-step.active .step-label {
  color: var(--primary-color);
  font-weight: 600;
}

.progress-step.completed .step-number {
  background-color: var(--success-color);
  border-color: var(--success-color);
  color: white;
}

.checkout-content {
  display: grid;
  grid-template-columns: 1fr 350px;
  gap: 2rem;
  align-items: start;
}

.checkout-form {
  background-color: white;
  border-radius: var(--border-radius);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
  padding: 2rem;
}

.step-title {
  font-size: 1.5rem;
  margin-bottom: 1.5rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

.form-row {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
  margin-bottom: 1rem;
}

.form-group {
  margin-bottom: 1rem;
}

.form-group label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
}

.form-group input,
.form-group select {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: var(--border-radius);
  font-size: 1rem;
  transition: border-color var(--transition-speed), box-shadow var(--transition-speed);
}

.form-group input:focus,
.form-group select:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(58, 134, 255, 0.2);
}

.checkbox-group {
  display: flex;
  align-items: center;
}

.checkbox-group input {
  width: auto;
  margin-right: 0.5rem;
}

.checkbox-group label {
  margin-bottom: 0;
}

.payment-methods {
  display: flex;
  gap: 1rem;
  margin-bottom: 1.5rem;
}

.payment-method {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.credit-card-form {
  margin-bottom: 1.5rem;
}

.paypal-info {
  background-color: #f5f5f5;
  padding: 1rem;
  border-radius: var(--border-radius);
  margin-bottom: 1.5rem;
}

.terms-group {
  margin-top: 1.5rem;
}

.terms-group a {
  color: var(--primary-color);
  text-decoration: none;
}

.terms-group a:hover {
  text-decoration: underline;
}

.checkout-actions {
  display: flex;
  justify-content: space-between;
  margin-top: 2rem;
  padding-top: 1.5rem;
  border-top: 1px solid rgba(0, 0, 0, 0.1);
}

.order-summary {
  background-color: white;
  border-radius: var(--border-radius);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
  position: sticky;
  top: 100px;
}

.summary-title {
  padding: 1.5rem;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  margin: 0;
  font-size: 1.2rem;
}

.summary-items {
  max-height: 300px;
  overflow-y: auto;
  padding: 1rem;
}

.summary-item {
  display: flex;
  align-items: center;
  padding: 0.75rem 0;
  border-bottom: 1px solid rgba(0, 0, 0, 0.05);
}

.summary-item:last-child {
  border-bottom: none;
}

.item-image {
  width: 60px;
  height: 60px;
  border-radius: var(--border-radius);
  overflow: hidden;
  margin-right: 1rem;
  position: relative;
}

.item-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.item-quantity {
  position: absolute;
  top: -5px;
  right: -5px;
  background-color: var(--primary-color);
  color: white;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.75rem;
  font-weight: 600;
}

.item-details {
  flex: 1;
}

.item-name {
  font-size: 0.95rem;
  margin: 0 0 0.25rem;
}

.item-price {
  color: var(--primary-color);
  font-weight: 600;
  margin: 0;
  font-size: 0.9rem;
}

.summary-totals {
  padding: 1.5rem;
  border-top: 1px solid rgba(0, 0, 0, 0.1);
}

.summary-row {
  display: flex;
  justify-content: space-between;
  margin-bottom: 0.75rem;
  font-size: 0.95rem;
}

.summary-row.total {
  font-size: 1.2rem;
  font-weight: 700;
  margin-top: 1rem;
  padding-top: 1rem;
  border-top: 1px dashed rgba(0, 0, 0, 0.1);
}

@media (max-width: 992px) {
  .checkout-content {
    grid-template-columns: 1fr;
  }
  
  .order-summary {
    position: static;
  }
}

@media (max-width: 768px) {
  .form-row {
    grid-template-columns: 1fr;
  }
  
  .checkout-actions {
    flex-direction: column;
    gap: 1rem;
  }
  
  .checkout-actions button {
    width: 100%;
  }
}
</style>
